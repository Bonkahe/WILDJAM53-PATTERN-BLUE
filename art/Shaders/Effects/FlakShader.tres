[gd_resource type="VisualShader" load_steps=23 format=3 uid="uid://cycbmc0rkm5rl"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_00pba"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vtgwq"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_jkmpe"]
parameter_name = "EmissionPower"
default_value_enabled = true
default_value = 5.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_241s0"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jsmx7"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ki6je"]
default_input_values = [0, 0.0, 1, 0.5]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_pa6e3"]
default_input_values = [0, 0.0, 1, 3.0]
operator = 2

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_c0wx6"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_x0txs"]
default_input_values = [0, 0.0, 1, -0.2]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_vpsas"]
parameter_name = "Albedo"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_h6iex"]
function = 31

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_khtn0"]
default_input_values = [0, 0.0, 1, 0.6, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_6i7d2"]
constant = 2.0

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_d40ud"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ca8cc"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_i0tth"]
operator = 4

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ds2wn"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_jwvur"]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_vj2wl"]
function = 31

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wogrs"]
default_input_values = [0, 0.0, 1, 200.0]
operator = 2

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_2nq7j"]
default_input_values = [0, 0.0, 1, 3.0, 2, 0.5]

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_or474"]
billboard_type = 3

[resource]
code = "shader_type spatial;
uniform sampler2D Albedo;
uniform float EmissionPower = 5;



void vertex() {
	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __wm = mat4(normalize(INV_VIEW_MATRIX[0]) * length(MODEL_MATRIX[0]), normalize(INV_VIEW_MATRIX[1]) * length(MODEL_MATRIX[0]), normalize(INV_VIEW_MATRIX[2]) * length(MODEL_MATRIX[2]), MODEL_MATRIX[3]);
		__wm = __wm * mat4(vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = VIEW_MATRIX * __wm;
	}


// Output:0
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Albedo, UV);
	float n_out3p1 = n_out3p0.r;
	float n_out3p2 = n_out3p0.g;
	float n_out3p3 = n_out3p0.b;


// FloatConstant:22
	float n_out22p0 = 2.000000;


	vec3 n_out4p0;
// ColorOp:4
	{
		float base = vec3(n_out3p1).x;
		float blend = vec3(n_out22p0).x;
		if (base < 0.5) {
			n_out4p0.x = 2.0 * base * blend;
		} else {
			n_out4p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p1).y;
		float blend = vec3(n_out22p0).y;
		if (base < 0.5) {
			n_out4p0.y = 2.0 * base * blend;
		} else {
			n_out4p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p1).z;
		float blend = vec3(n_out22p0).z;
		if (base < 0.5) {
			n_out4p0.z = 2.0 * base * blend;
		} else {
			n_out4p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Input:15
	vec4 n_out15p0 = COLOR;
	float n_out15p4 = n_out15p0.a;


// VectorOp:5
	vec4 n_out5p0 = vec4(n_out4p0, 0.0) * n_out15p0;


// FloatOp:19
	float n_in19p1 = -0.20000;
	float n_out19p0 = n_out15p4 + n_in19p1;


// Clamp:18
	float n_in18p1 = 0.00000;
	float n_in18p2 = 1.00000;
	float n_out18p0 = clamp(n_out19p0, n_in18p1, n_in18p2);


// FloatOp:17
	float n_in17p1 = 3.00000;
	float n_out17p0 = n_out18p0 * n_in17p1;


// FloatOp:16
	float n_in16p1 = 0.50000;
	float n_out16p0 = n_out17p0 + n_in16p1;


// FloatFunc:20
	float n_out20p0 = 1.0 - n_out3p1;


// SmoothStep:21
	float n_in21p0 = 0.00000;
	float n_in21p1 = 0.60000;
	float n_out21p0 = smoothstep(n_in21p0, n_in21p1, n_out3p3);


// FloatOp:14
	float n_out14p0 = n_out20p0 * n_out21p0;


// SmoothStep:23
	float n_out23p0 = smoothstep(n_out17p0, n_out16p0, n_out14p0);


// FloatFunc:7
	float n_out7p0 = 1.0 - n_out15p4;


// FloatOp:8
	float n_in8p1 = 200.00000;
	float n_out8p0 = n_out7p0 * n_in8p1;


// FloatOp:6
	float n_out6p0 = n_out3p2 * n_out8p0;


// SmoothStep:9
	float n_in9p0 = 0.00000;
	float n_in9p1 = 3.00000;
	float n_out9p0 = smoothstep(n_in9p0, n_in9p1, n_out6p0);


// VectorOp:10
	vec4 n_out10p0 = vec4(n_out9p0) * n_out15p0;


// FloatParameter:12
	float n_out12p0 = EmissionPower;


// VectorOp:11
	vec4 n_out11p0 = n_out10p0 * vec4(n_out12p0);


// Output:0
	ALBEDO = vec3(n_out5p0.xyz);
	ALPHA = n_out23p0;
	EMISSION = vec3(n_out11p0.xyz);


}
"
graph_offset = Vector2(-722.586, -197.848)
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_or474")
nodes/vertex/2/position = Vector2(-40, 340)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_vpsas")
nodes/fragment/2/position = Vector2(-1920, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_ca8cc")
nodes/fragment/3/position = Vector2(-1480, 160)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorOp_i0tth")
nodes/fragment/4/position = Vector2(-780, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_ds2wn")
nodes/fragment/5/position = Vector2(-460, 100)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_jwvur")
nodes/fragment/6/position = Vector2(-340, 520)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatFunc_vj2wl")
nodes/fragment/7/position = Vector2(-680, 320)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_wogrs")
nodes/fragment/8/position = Vector2(-500, 360)
nodes/fragment/9/node = SubResource("VisualShaderNodeSmoothStep_2nq7j")
nodes/fragment/9/position = Vector2(-160, 640)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_00pba")
nodes/fragment/10/position = Vector2(-220, 220)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_vtgwq")
nodes/fragment/11/position = Vector2(20, 180)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatParameter_jkmpe")
nodes/fragment/12/position = Vector2(-80, 360)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatOp_241s0")
nodes/fragment/14/position = Vector2(-660, 40)
nodes/fragment/15/node = SubResource("VisualShaderNodeInput_jsmx7")
nodes/fragment/15/position = Vector2(-1620, -160)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_ki6je")
nodes/fragment/16/position = Vector2(-660, -100)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_pa6e3")
nodes/fragment/17/position = Vector2(-820, -220)
nodes/fragment/18/node = SubResource("VisualShaderNodeClamp_c0wx6")
nodes/fragment/18/position = Vector2(-1020, -220)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatOp_x0txs")
nodes/fragment/19/position = Vector2(-1200, -220)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatFunc_h6iex")
nodes/fragment/20/position = Vector2(-1060, 60)
nodes/fragment/21/node = SubResource("VisualShaderNodeSmoothStep_khtn0")
nodes/fragment/21/position = Vector2(-1100, 180)
nodes/fragment/22/node = SubResource("VisualShaderNodeFloatConstant_6i7d2")
nodes/fragment/22/position = Vector2(-980, 340)
nodes/fragment/23/node = SubResource("VisualShaderNodeSmoothStep_d40ud")
nodes/fragment/23/position = Vector2(-460, -180)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 15, 4, 7, 0, 7, 0, 8, 0, 8, 0, 6, 1, 6, 0, 9, 2, 9, 0, 10, 0, 15, 0, 10, 1, 10, 0, 11, 0, 12, 0, 11, 1, 20, 0, 14, 0, 14, 0, 23, 2, 21, 0, 14, 1, 15, 0, 5, 1, 15, 4, 19, 0, 17, 0, 16, 0, 16, 0, 23, 1, 17, 0, 23, 0, 18, 0, 17, 0, 19, 0, 18, 0, 22, 0, 4, 1, 23, 0, 0, 1, 4, 0, 5, 0, 5, 0, 0, 0, 3, 3, 21, 2, 3, 2, 6, 0, 3, 1, 4, 0, 3, 1, 20, 0, 11, 0, 0, 5)
