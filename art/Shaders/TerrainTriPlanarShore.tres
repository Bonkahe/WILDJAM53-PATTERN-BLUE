[gd_resource type="VisualShader" load_steps=33 format=3 uid="uid://c0vu2swsia0tq"]

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_2mnh5"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_ld6ov"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2gpon"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_g71d1"]
constant = 3.0

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_gt33j"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_cyebv"]
constant = Color(0.693297, 0.502343, 0.279486, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_gkm8j"]
constant = Color(0.583981, 0.00995786, 1.44392e-07, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_k1hhl"]
constant = 4.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_q2u5q"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_y05wa"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_d5401"]
constant = Color(0.374492, 0.380853, 0, 1)

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_e8osq"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0), 2, Quaternion(1, 1, 1, 1)]
op_type = 5

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_2yayt"]
default_input_values = [0, 1.827, 1, 2.2, 2, -2.734]

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_n3vy5"]
default_input_values = [0, 0.798, 1, 0.926, 2, -2.734]

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_jbef3"]
parameter_name = "Albedo"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1m85s"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_gm5jv"]
parameter_name = "Roughness"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_r27dd"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_tghm3"]
constant = 0.8

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_ic1mh"]
default_input_values = [2, false, 3, 9.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4yeky"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_wwe02"]
constant = Color(0.685848, 0.462802, 9.62615e-07, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ddx8j"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_6awfw"]
constant = 2.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_1mybs"]

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_fg67v"]
default_input_values = [0, 1.827, 1, 2.8, 2, -2.734]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_d844e"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_3hlxd"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0), 2, Quaternion(1, 1, 1, 1)]
op_type = 5

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_fb8v4"]
constant = Color(0.757991, 0.970666, 1, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_t01xq"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4ynl2"]
input_name = "inv_view_matrix"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ipw3r"]
input_name = "vertex"

[resource]
code = "shader_type spatial;
uniform sampler2D Albedo;
uniform sampler2D Roughness;


// TextureUniformTriplanar
	vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
		vec4 samp = vec4(0.0);
		samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
		samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
		samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
		return samp;
	}

	uniform vec3 triplanar_scale = vec3(1.0, 1.0, 1.0);
	uniform vec3 triplanar_offset;
	uniform float triplanar_sharpness = 0.5;

	varying vec3 triplanar_power_normal;
	varying vec3 triplanar_pos;

void vertex() {
// TextureUniformTriplanar
	{
		triplanar_power_normal = pow(abs(NORMAL), vec3(triplanar_sharpness));
		triplanar_power_normal /= dot(triplanar_power_normal, vec3(1.0));
		triplanar_pos = VERTEX * triplanar_scale + triplanar_offset;
		triplanar_pos *= vec3(1.0, -1.0, 1.0);
	}
}

void fragment() {
// ColorConstant:17
	vec4 n_out17p0 = vec4(0.583981, 0.009958, 0.000000, 1.000000);


// ColorConstant:16
	vec4 n_out16p0 = vec4(0.693297, 0.502343, 0.279486, 1.000000);


// Input:7
	mat4 n_out7p0 = INV_VIEW_MATRIX;


// Input:9
	vec3 n_out9p0 = VERTEX;


// TransformVectorMult:11
	vec3 n_out11p0 = (n_out7p0 * vec4(n_out9p0, 1.0)).xyz;


// VectorDecompose:12
	float n_out12p0 = n_out11p0.x;
	float n_out12p1 = n_out11p0.y;
	float n_out12p2 = n_out11p0.z;


// FloatConstant:14
	float n_out14p0 = 3.000000;


// FloatOp:13
	float n_out13p0 = n_out12p1 + n_out14p0;


// SmoothStep:32
	float n_in32p0 = 0.79800;
	float n_in32p1 = 0.92600;
	float n_out32p0 = smoothstep(n_in32p0, n_in32p1, n_out13p0);


// Mix:15
	vec4 n_out15p0 = mix(n_out17p0, n_out16p0, vec4(n_out32p0));


// Clamp:26
	vec4 n_in26p1 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_in26p2 = vec4(1.00000, 1.00000, 1.00000, 1.00000);
	vec4 n_out26p0 = clamp(n_out15p0, n_in26p1, n_in26p2);


// TextureUniformTriplanar:33
	vec4 n_out33p0 = triplanar_texture(Albedo, triplanar_power_normal, triplanar_pos);


// ColorConstant:21
	vec4 n_out21p0 = vec4(0.374492, 0.380853, 0.000000, 1.000000);


// VectorOp:34
	vec4 n_out34p0 = n_out33p0 * n_out21p0;


// FloatConstant:18
	float n_out18p0 = 4.000000;


// FloatOp:19
	float n_out19p0 = n_out12p1 + n_out18p0;


// SmoothStep:31
	float n_in31p0 = 1.82700;
	float n_in31p1 = 2.20000;
	float n_out31p0 = smoothstep(n_in31p0, n_in31p1, n_out19p0);


// Mix:20
	vec4 n_out20p0 = mix(n_out26p0, n_out34p0, vec4(n_out31p0));


// Clamp:47
	vec4 n_in47p1 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_in47p2 = vec4(1.00000, 1.00000, 1.00000, 1.00000);
	vec4 n_out47p0 = clamp(n_out20p0, n_in47p1, n_in47p2);


// ColorConstant:48
	vec4 n_out48p0 = vec4(0.757991, 0.970666, 1.000000, 1.000000);


// FloatConstant:37
	float n_out37p0 = 0.800000;


// TextureUniformTriplanar:35
	vec4 n_out35p0 = triplanar_texture(Roughness, triplanar_power_normal, triplanar_pos);


// Mix:36
	vec4 n_out36p0 = mix(vec4(n_out37p0), n_out35p0, vec4(n_out31p0));


// FloatConstant:43
	float n_out43p0 = 2.000000;


// FloatOp:44
	float n_out44p0 = n_out12p1 + n_out43p0;


// FloatOp:49
	float n_out49p0 = n_out36p0.x * n_out44p0;


// SmoothStep:45
	float n_in45p0 = 1.82700;
	float n_in45p1 = 2.80000;
	float n_out45p0 = smoothstep(n_in45p0, n_in45p1, n_out49p0);


// Mix:46
	vec4 n_out46p0 = mix(n_out47p0, n_out48p0, vec4(n_out45p0));


// ColorConstant:41
	vec4 n_out41p0 = vec4(0.685848, 0.462802, 0.000001, 1.000000);


// Fresnel:38
	float n_in38p3 = 9.00000;
	float n_out38p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in38p3);


// FloatOp:39
	float n_in39p1 = 0.50000;
	float n_out39p0 = n_out38p0 * n_in39p1;


// VectorOp:42
	vec4 n_out42p0 = n_out41p0 * vec4(n_out39p0);


// Output:0
	ALBEDO = vec3(n_out46p0.xyz);
	ROUGHNESS = n_out36p0.x;
	EMISSION = vec3(n_out42p0.xyz);


}
"
graph_offset = Vector2(-639.406, -84.4866)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_4ynl2")
nodes/fragment/7/position = Vector2(-3420, 200)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_ipw3r")
nodes/fragment/9/position = Vector2(-3400, 340)
nodes/fragment/11/node = SubResource("VisualShaderNodeTransformVecMult_2mnh5")
nodes/fragment/11/position = Vector2(-3060, 260)
nodes/fragment/12/node = SubResource("VisualShaderNodeVectorDecompose_ld6ov")
nodes/fragment/12/position = Vector2(-2800, 260)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatOp_2gpon")
nodes/fragment/13/position = Vector2(-2500, 240)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatConstant_g71d1")
nodes/fragment/14/position = Vector2(-2740, 480)
nodes/fragment/15/node = SubResource("VisualShaderNodeMix_gt33j")
nodes/fragment/15/position = Vector2(-2100, -60)
nodes/fragment/16/node = SubResource("VisualShaderNodeColorConstant_cyebv")
nodes/fragment/16/position = Vector2(-2480, -60)
nodes/fragment/17/node = SubResource("VisualShaderNodeColorConstant_gkm8j")
nodes/fragment/17/position = Vector2(-2460, -180)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatConstant_k1hhl")
nodes/fragment/18/position = Vector2(-2320, 460)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatOp_q2u5q")
nodes/fragment/19/position = Vector2(-2100, 360)
nodes/fragment/20/node = SubResource("VisualShaderNodeMix_y05wa")
nodes/fragment/20/position = Vector2(-1540, 140)
nodes/fragment/21/node = SubResource("VisualShaderNodeColorConstant_d5401")
nodes/fragment/21/position = Vector2(-1760, -100)
nodes/fragment/26/node = SubResource("VisualShaderNodeClamp_e8osq")
nodes/fragment/26/position = Vector2(-1740, 100)
nodes/fragment/31/node = SubResource("VisualShaderNodeSmoothStep_2yayt")
nodes/fragment/31/position = Vector2(-1860, 360)
nodes/fragment/32/node = SubResource("VisualShaderNodeSmoothStep_n3vy5")
nodes/fragment/32/position = Vector2(-2320, 160)
nodes/fragment/33/node = SubResource("VisualShaderNodeTextureParameterTriplanar_jbef3")
nodes/fragment/33/position = Vector2(-2000, -420)
nodes/fragment/34/node = SubResource("VisualShaderNodeVectorOp_1m85s")
nodes/fragment/34/position = Vector2(-1540, -140)
nodes/fragment/35/node = SubResource("VisualShaderNodeTextureParameterTriplanar_gm5jv")
nodes/fragment/35/position = Vector2(-2660, 560)
nodes/fragment/36/node = SubResource("VisualShaderNodeMix_r27dd")
nodes/fragment/36/position = Vector2(-1500, 420)
nodes/fragment/37/node = SubResource("VisualShaderNodeFloatConstant_tghm3")
nodes/fragment/37/position = Vector2(-1720, 520)
nodes/fragment/38/node = SubResource("VisualShaderNodeFresnel_ic1mh")
nodes/fragment/38/position = Vector2(-940, 1260)
nodes/fragment/39/node = SubResource("VisualShaderNodeFloatOp_4yeky")
nodes/fragment/39/position = Vector2(-620, 1200)
nodes/fragment/41/node = SubResource("VisualShaderNodeColorConstant_wwe02")
nodes/fragment/41/position = Vector2(-680, 1400)
nodes/fragment/42/node = SubResource("VisualShaderNodeVectorOp_ddx8j")
nodes/fragment/42/position = Vector2(-460, 1240)
nodes/fragment/43/node = SubResource("VisualShaderNodeFloatConstant_6awfw")
nodes/fragment/43/position = Vector2(-1760, 700)
nodes/fragment/44/node = SubResource("VisualShaderNodeFloatOp_1mybs")
nodes/fragment/44/position = Vector2(-1540, 600)
nodes/fragment/45/node = SubResource("VisualShaderNodeSmoothStep_fg67v")
nodes/fragment/45/position = Vector2(-1160, 560)
nodes/fragment/46/node = SubResource("VisualShaderNodeMix_d844e")
nodes/fragment/46/position = Vector2(-1000, 180)
nodes/fragment/47/node = SubResource("VisualShaderNodeClamp_3hlxd")
nodes/fragment/47/position = Vector2(-1300, 280)
nodes/fragment/48/node = SubResource("VisualShaderNodeColorConstant_fb8v4")
nodes/fragment/48/position = Vector2(-1220, 120)
nodes/fragment/49/node = SubResource("VisualShaderNodeFloatOp_t01xq")
nodes/fragment/49/position = Vector2(-1340, 580)
nodes/fragment/connections = PackedInt32Array(7, 0, 11, 0, 9, 0, 11, 1, 11, 0, 12, 0, 12, 1, 13, 0, 14, 0, 13, 1, 18, 0, 19, 1, 12, 1, 19, 0, 16, 0, 15, 1, 17, 0, 15, 0, 15, 0, 26, 0, 19, 0, 31, 2, 13, 0, 32, 2, 32, 0, 15, 2, 31, 0, 20, 2, 33, 0, 34, 0, 21, 0, 34, 1, 26, 0, 20, 0, 34, 0, 20, 1, 31, 0, 36, 2, 36, 0, 0, 3, 35, 0, 36, 1, 37, 0, 36, 0, 38, 0, 39, 0, 41, 0, 42, 0, 39, 0, 42, 1, 42, 0, 0, 5, 43, 0, 44, 1, 12, 1, 44, 0, 20, 0, 47, 0, 47, 0, 46, 0, 45, 0, 46, 2, 48, 0, 46, 1, 36, 0, 49, 0, 44, 0, 49, 1, 49, 0, 45, 2, 46, 0, 0, 0)
